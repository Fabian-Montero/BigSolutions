@model BigSolutionsWeb.Entidades.Usuario
@{
    ViewData["Title"] = "Cambiar Contraseña";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container">
    <div class="row justify-content-center">
        <div class="col-lg-8">
            <div class="card shadow-lg border-0 rounded-lg mt-5">
                <div class="card-header text-center">
                    <h3 class="font-weight-extra-bold my-4">Cambiar tu Contraseña:</h3>
                </div>
                <div class="card-body">
                    <div id="alert-container" class="mb-3">
                    </div>
                    @if (ViewBag.msj != null)
                    {
                        <div id="warningAlert" class="alert alert-warning" role="alert" style="text-align: center;">
                            @ViewBag.msj
                        </div>
                    }
                    @using (Html.BeginForm("CambiarContrasenna", "Usuario"))
                    {
                        <div class="row">
                            <div class="col-md-12">
                                <div class="form-group position-relative">
                                    @Html.TextBoxFor(m => m.Contrasenna, new { @class = "form-control", @type = "password", @required = "required", @id = "ContrasennaActual", @placeholder = "Contraseña Actual" })
                                    <i class="bi bi-eye-fill" id="togglePasswordContrasennaActual" style="display: none; position: absolute; top: 50%; right: 15px; transform: translateY(-50%); cursor: pointer;"></i>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group position-relative">
                                    @Html.TextBoxFor(m => m.NuevaContrasenna, new { @class = "form-control", @type = "password", @required = "required", @id = "Contrasenna", @placeholder = "Nueva contraseña" })
                                    <i class="bi bi-eye-fill" id="togglePasswordNuevaContrasenna" style="display: none; position: absolute; top: 50%; right: 15px; transform: translateY(-50%); cursor: pointer;"></i>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group position-relative">
                                    @Html.TextBoxFor(m => m.ConfirmacionContrasenna, new { @class = "form-control", @type = "password", @required = "required", @id = "ConfirmacionContrasenna", @placeholder = "Confirmar la nueva contraseña" })
                                    <i class="bi bi-eye-fill" id="togglePasswordConfirmacionContrasenna" style="display: none; position: absolute; top: 50%; right: 15px; transform: translateY(-50%); cursor: pointer;"></i>
                                </div>
                            </div>
                        </div>

                        <div class="d-flex justify-content-center mt-4">
                            @* <button type="submit" class="botones" onclick="submitForm()">Guardar Cambios</button> *@
                            <button type="submit" class="botones">Guardar Cambios</button>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>
<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script src="~/js/sweetalert.js"></script>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        const passwordInputs = [
            { input: document.getElementById("Contrasenna"), toggleIcon: document.getElementById("togglePasswordNuevaContrasenna") },
            { input: document.getElementById("ConfirmacionContrasenna"), toggleIcon: document.getElementById("togglePasswordConfirmacionContrasenna") },
            { input: document.getElementById("ContrasennaActual"), toggleIcon: document.getElementById("togglePasswordContrasennaActual") }
        ];

        passwordInputs.forEach(({ input, toggleIcon }) => {
            input.addEventListener("input", function () {
                if (this.value.length > 0) {
                    toggleIcon.style.display = "block";
                } else {
                    toggleIcon.style.display = "none";
                    input.type = "password";
                    toggleIcon.classList.remove("bi-eye-slash-fill");
                    toggleIcon.classList.add("bi-eye-fill");
                }
            });

            toggleIcon.addEventListener("click", function () {
                if (input.type === "password") {
                    input.type = "text";
                    this.classList.remove("bi-eye-fill");
                    this.classList.add("bi-eye-slash-fill");
                } else {
                    input.type = "password";
                    this.classList.remove("bi-eye-slash-fill");
                    this.classList.add("bi-eye-fill");
                }
            });
        });
    });
</script>